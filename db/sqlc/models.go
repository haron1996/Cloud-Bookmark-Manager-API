// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0

package sqlc

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type CollectionAccessLevel string

const (
	CollectionAccessLevelView CollectionAccessLevel = "view"
	CollectionAccessLevelEdit CollectionAccessLevel = "edit"
)

func (e *CollectionAccessLevel) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = CollectionAccessLevel(s)
	case string:
		*e = CollectionAccessLevel(s)
	default:
		return fmt.Errorf("unsupported scan type for CollectionAccessLevel: %T", src)
	}
	return nil
}

type NullCollectionAccessLevel struct {
	CollectionAccessLevel CollectionAccessLevel
	Valid                 bool // Valid is true if CollectionAccessLevel is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullCollectionAccessLevel) Scan(value interface{}) error {
	if value == nil {
		ns.CollectionAccessLevel, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.CollectionAccessLevel.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullCollectionAccessLevel) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.CollectionAccessLevel), nil
}

type Account struct {
	ID              int64          `json:"id"`
	Fullname        string         `json:"fullname"`
	Email           string         `json:"email"`
	EmailVerified   bool           `json:"email_verified"`
	Picture         string         `json:"picture"`
	AccountPassword string         `json:"account_password"`
	CreatedAt       time.Time      `json:"created_at"`
	Intention       sql.NullString `json:"intention"`
	LastLogin       time.Time      `json:"last_login"`
}

type AccountSession struct {
	RefreshTokenID string    `json:"refresh_token_id"`
	AccountID      int64     `json:"account_id"`
	IssuedAt       time.Time `json:"issued_at"`
	Expiry         time.Time `json:"expiry"`
	UserAgent      string    `json:"user_agent"`
	ClientIp       string    `json:"client_ip"`
}

type Contact struct {
	ID          int64  `json:"id"`
	Account     int64  `json:"account"`
	MessageBody string `json:"message_body"`
}

type EmailVerification struct {
	Code   string    `json:"code"`
	Email  string    `json:"email"`
	Expiry time.Time `json:"expiry"`
}

type Folder struct {
	FolderID               string         `json:"folder_id"`
	AccountID              int64          `json:"account_id"`
	FolderName             string         `json:"folder_name"`
	Path                   string         `json:"path"`
	Label                  string         `json:"label"`
	Starred                bool           `json:"starred"`
	FolderCreatedAt        time.Time      `json:"folder_created_at"`
	FolderUpdatedAt        time.Time      `json:"folder_updated_at"`
	SubfolderOf            sql.NullString `json:"subfolder_of"`
	FolderDeletedAt        sql.NullTime   `json:"folder_deleted_at"`
	TextsearchableIndexCol interface{}    `json:"textsearchable_index_col"`
}

type Link struct {
	LinkID                 string         `json:"link_id"`
	LinkTitle              string         `json:"link_title"`
	LinkThumbnail          string         `json:"link_thumbnail"`
	LinkFavicon            string         `json:"link_favicon"`
	LinkHostname           string         `json:"link_hostname"`
	LinkUrl                string         `json:"link_url"`
	LinkNotes              string         `json:"link_notes"`
	AccountID              int64          `json:"account_id"`
	FolderID               sql.NullString `json:"folder_id"`
	AddedAt                time.Time      `json:"added_at"`
	UpdatedAt              time.Time      `json:"updated_at"`
	DeletedAt              sql.NullTime   `json:"deleted_at"`
	TextsearchableIndexCol interface{}    `json:"textsearchable_index_col"`
}

type PublicSharedCollection struct {
	CollectionID          string                `json:"collection_id"`
	CollectionPassword    string                `json:"collection_password"`
	CollectionSharedBy    int64                 `json:"collection_shared_by"`
	CollectionSharedAt    time.Time             `json:"collection_shared_at"`
	CollectionShareExpiry sql.NullTime          `json:"collection_share_expiry"`
	CollectionAccessLevel CollectionAccessLevel `json:"collection_access_level"`
}

type SharedCollection struct {
	CollectionID          string                `json:"collection_id"`
	CollectionSharedBy    int64                 `json:"collection_shared_by"`
	CollectionSharedWith  int64                 `json:"collection_shared_with"`
	CollectionSharedAt    time.Time             `json:"collection_shared_at"`
	CollectionAccessLevel CollectionAccessLevel `json:"collection_access_level"`
}
